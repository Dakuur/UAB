n <- length(x)
prop_esq <- esq / n
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha)
## Contrast mitjana - sigma coneguda
## a)
x <- kidsfeet$Longitud
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
alpha <- 0.01
x <- kidsfeet$Peu
esq <- sum(x == "L")
n <- length(x)
prop_esq <- esq / n
# Test d'hp unilateral dret
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha)
alpha <- 0.05
# Test d'hp unilateral dret
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha)
# Test d'hp unilateral dret
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
prop.test(esq, n, p = 0.7, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
prop.test(esq, n, p = 0.9, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
3
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
# Test d'hp unilateral esquerra
alpha <- 0.05
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.30
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.99
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
var.test(A, B)
alpha = 0.05
A = kidsfeet$Longitud
B = kidsfeet$Amplada
var.test(A, B)
View(kidsfeet)
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
## e)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
t.test(esq, dre, conf.level = 1 - aplha)
t.test(esq, dre, conf.level = 1 - alpha)
## e)
alpha = 0.05
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
t.test(esq, dre, conf.level = 1 - alpha)
## e)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
t.test(esq, dre, conf.level = 1 - alpha)
## f)
t.test(esq, dre, conf.level = 1 - alpha, var.equal = TRUE)
t.test(esq, dre, conf.level = 1 - alpha)
## f)
t.test(esq, dre, conf.level = 1 - alpha, var.equal = TRUE)
alpha = 0.05
# H0: alphaA2 = alphaA2
# H1: alphaA2 != alphaA2
A = kidsfeet$Longitud
B = kidsfeet$Amplada
var.test(A, B)
alpha =  0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
var.test(esq, dre)
var.test(esq, dre, conf.level = 1 - alpha)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
t.test(esq, dre, conf.level = 1 - alpha)
## f)
t.test(esq, dre, conf.level = 1 - alpha, var.equal = TRUE)
alpha =  0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
var.test(esq, dre, conf.level = 1 - alpha)
v_A <- 615
n <- 1000
p_nula <- 0.60
resultat_prova <- prop.test(v_A, n, p = p_nula, alternative = "greater")
# Mostrar els resultats
print(resultat_prova)
# Mostrar els resultats
print(resultat_prova)
load("C:/Users/david/OneDrive - UAB/Documentos/UAB/2o/prolly/practica6/Anime.RData")
x <- anime$FONT
manga <- sum(x == "Manga")
n = length(x)
load("C:/Users/david/OneDrive - UAB/Documentos/UAB/2o/prolly/practica6/Anime.RData")
x <- anime$FONT
n = length(x)
manga <- sum(x == "Manga")
p_manga = manga / p
p_manga = manga / n
p_other = 1- p_manga
load("C:/Users/david/OneDrive - UAB/Documentos/UAB/2o/prolly/practica6/Anime.RData")
x <- anime$FONT
n <- length(x)
manga <- sum(x == "Manga")
p_manga <- manga / n
p_other <- 1- p_manga
p_nula <- 0.5
prop.test(manga, n, p = p_nula, alternative = "less")
val_manga <- anime$PUNTS[anime$FONT == "Manga"]
val_manga <- anime$PUNTS[anime$FONT == "Manga" && anime$ANY >= 2000]
val_manga <- anime$PUNTS[anime$FONT == "Manga" & anime$ANY >= 2000]
val_manga <- anime$PUNTS[anime$FONT == "Manga"]
& anime$ANY >= 2000
val_other <- anime$PUNTS[anime$FONT != "Manga" & anime$ANY >= 2000]
val_other <- anime$PUNTS[anime$ANY >= 2000]
val_manga <- anime$PUNTS[anime$FONT == "Manga" & anime$ANY >= 2000]
val_other <- anime$PUNTS[anime$FONT != "Manga" & anime$ANY >= 2000]
t.test(val_manga, val_other, var.equal = FALSE)
t.test(val_manga, val_other, alternative = "greater" var.equal = FALSE)
t.test(val_manga, val_other, alternative = "greater" var.equal = FALSE)
t.test(val_manga, val_other, alternative = "greater", var.equal = FALSE)
setwd("C:/Users/david/OneDrive - UAB/Documentos/UAB/2o/prolly/practica6")
source("~/UAB/2o/prolly/practica6/exercicis6.R")
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)["p-value"]
x <- kidsfeet$Longitud
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
alpha <- 0.01
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)["p-value"]
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
source("~/UAB/2o/prolly/practica6/exercicis6.R")
source("~/UAB/2o/prolly/practica6/exercicis6.R")
varTest(x, sigma.squared = sigma2)
library(EnvStats)
sigma2 <- 1
varTest(x, sigma.squared = sigma2)
sigma2 <- 1.2
varTest(x, sigma.squared = sigma2)
x <- dades2$Nombres
library(EnvStats)
sigma2 <- 1.2
varTest(x, sigma.squared = sigma2)
x <- dades2$Nombres
alpha <- 0.1
library(EnvStats)
sigma2 <- 1.2
varTest(x, sigma.squared = sigma2 , conf.level = 1 - alpha)
# pvalor > alpha ---> Acceptem H0
x <- kidsfeet$Amplada
alpha <- 0.05
library(EnvStats)
sigma_p <- 0.56
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.03
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
sigma <- 0.9
xm <- mean(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
z <- (xm-mu)/sigma*sqrt(n)
pvalor <- pnorm(z)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
t.test(x, alternative = "less", mu = mu)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
alpha 0.05
mu <- 4
alpha <- 0.05
t.test(x, alternative = "less", mu = mu, conf.level = 1 - alpha)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
sigma <- 0.9
xm <- mean(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
z <- (xm-mu)/sigma*sqrt(n)
pvalor <- pnorm(z)
print(pvalor)
print("P-Valor:", pvalor)
print("P-Valor:" + pvalor)
cat("P-Valor:", pvalor, "\n")
t.test(dades2, mu = 12, alternative = "two.sided", conf.level = 1-alpha)
load("dades2.RData")
x <- dades2$Nombres
alpha <- 0.1
## a)
# TEST D'HIPOTESIS:
# H0 : mu = 11
# H1 : mu > 11
t.test(dades2, mu = 11, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
## b)
# TEST D'HIPOTESIS:
# H0 : mu = 12
# H1 : mu =! 12
t.test(dades2, mu = 12, alternative = "two.sided", conf.level = 1-alpha)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
sigma <- 0.9
xm <- mean(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
z <- (xm-mu)/sigma*sqrt(n)
pvalor <- pnorm(z)
cat("P-Valor:", pvalor, "\n")
load("dades2.RData")
x <- dades2$Nombres
alpha <- 0.1
## a)
# TEST D'HIPOTESIS:
# H0 : mu = 11
# H1 : mu > 11
t.test(dades2, mu = 11, alternative = "greater", conf.level = 1-alpha)
t.test(dades2, mu = 12, alternative = "two.sided", conf.level = 1-alpha)
N <- 135
n <- 300
prop.test(N, n, p = 0.4, alternative = "greater", correct = FALSE)
load("dades1.RData")
x <- dades1$Nombres
n <- length(x)
sigma <- 0.9
xm <- mean(x)
# TEST D'HIPOTESIS:
# H0 : mu = 4
# H1 : mu < 4
mu <- 4
z <- (xm-mu)/sigma*sqrt(n)
pvalor <- pnorm(z)
prop.test(N, n, p = 0.4, alternative = "greater", correct = FALSE)
N <- 135
n <- 300
prop.test(N, n, p = 0.4, alternative = "greater", correct = FALSE)
alpha <- 0.05
prop.test(N, n, p = 0.4, alternative = "greater", correct = FALSE, conf.level = 1 - alpha)
alpha <- 0.01
prop.test(N, n, p = 0.4, alternative = "greater", correct = FALSE, conf.level = 1 - alpha)
x <- dades2$Nombres
alpha <- 0.1
library(EnvStats)
sigma2 <- 1.2
varTest(x, sigma.squared = sigma2 , conf.level = 1 - alpha)
x <- kidsfeet$Longitud
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
x <- dades2$Nombres
alpha <- 0.1
library(EnvStats)
sigma2 <- 1.2
varTest(x, sigma.squared = sigma2 , conf.level = 1 - alpha)
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
alpha <- 0.01
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor > alpha ---> Acceptem H0
x <- kidsfeet$Longitud
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
x <- kidsfeet$Longitud
# TEST D'HIPOTESIS:
# H0 : sigma^2 = 1
# H1 : sigma^2 =! 1
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
alpha <- 0.01
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor > alpha ---> Acceptem H0
x <- kidsfeet$Longitud
# TEST D'HIPOTESIS:
# H0 : sigma^2 = 1
# H1 : sigma^2 =! 1
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
alpha <- 0.01
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor > alpha ---> Acceptem H0
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
x <- kidsfeet$Longitud
x <- kidsfeet$Peu
esq <- sum(x == "L")
n <- length(x)
# TEST D'HIPOTESIS:
# H0 : p = 0.3
# H1 : mu < 0.3
prop_esq <- esq / n
# Test d'hp unilateral esquerra
alpha <- 0.05
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
alpha <- 0.10
prop.test(esq, n, p = 0.3, alternative = "less", conf.level = 1 - alpha, correct = FALSE)
x <- kidsfeet$Amplada
# TEST D'HIPOTESIS:
# H0 : sigma = 0.56
# H1 : sigma < 0.56
alpha <- 0.05
library(EnvStats)
sigma_p <- 0.56
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.03
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.05
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.05
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.05
x <- kidsfeet$Amplada
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
x <- kidsfeet$Longitud
# TEST D'HIPOTESIS:
# H0 : ml = 8.8
# H1 : ml > 8.8
alpha <- 0.05
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
# pvalor < alpha ---> Acceptem H1
alpha <- 0.01
t.test(x, mu = 8.8, alternative = "greater", conf.level = 1-alpha)
x <- kidsfeet$Amplada
# TEST D'HIPOTESIS:
# H0 : sigma = 0.56
# H1 : sigma < 0.56
library(EnvStats)
sigma_p <- 0.56
alpha <- 0.05
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha <- 0.03
varTest(x, sigma = sigma_p, conf.level = 1 - alpha)
alpha = 0.05
# TEST D'HIPOTESIS:
# H0: alphaA2 = alphaA2
# H1: alphaA2 != alphaA2
A = kidsfeet$Longitud
B = kidsfeet$Amplada
var.test(A, B, conf.level = 1 - alpha)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0 : sigma = 0.56
# H1 : sigma < 0.56
t.test(esq, dre, conf.level = 1 - alpha)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0: mA = mB
# H1: mA != mB
t.test(esq, dre, conf.level = 1 - alpha)
alpha = 0.05
# TEST D'HIPOTESIS:
# H0: alphaA2 = alphaB2
# H1: alphaA2 != alphaB2
A = kidsfeet$Longitud
B = kidsfeet$Amplada
var.test(A, B, conf.level = 1 - alpha)
alpha = 0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0: mA = mB
# H1: mA != mB
t.test(esq, dre, conf.level = 1 - alpha)
## f)
t.test(esq, dre, conf.level = 1 - alpha, var.equal = TRUE)
## f)
t.test(esq, dre, conf.level = 1 - alpha, var.equal = TRUE)
alpha =  0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0: sigma2A == sigma2B
# H1: sigma2A != sigma2B
var.test(esq, dre, conf.level = 1 - alpha)
alpha =  0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0: sigma2A == sigma2B
# H1: sigma2A != sigma2B
var.test(esq, dre, conf.level = 1 - alpha)
alpha =  0.03
esq <- kidsfeet$Longitud[kidsfeet$Peu == "L"]
dre <- kidsfeet$Longitud[kidsfeet$Peu == "R"]
# TEST D'HIPOTESIS:
# H0: sigma2A == sigma2B
# H1: sigma2A != sigma2B
var.test(esq, dre, conf.level = 1 - alpha)
# pvalor > alpha ---> Acceptem H0
# Sense diferencia significativa
v_A <- 615
n <- 1000
p_nula <- 0.60
prop.test(v_A, n, p = p_nula, alternative = "greater")
v_A <- 615
n <- 1000
p_nula <- 0.60
# TEST D'HIPOTESIS:
# H0: p = 0.6
# H1: p > 0.6
prop.test(v_A, n, p = p_nula, alternative = "greater")
# pvalor > alpha ---> Acceptem H0
# No podem afirmar
load("Anime.RData")
load("Anime.RData")
# a)
x <- anime$FONT
n <- length(x)
manga <- sum(x == "Manga")
p_manga <- manga / n
p_other <- 1- p_manga
# TEST D'HIPOTESIS:
# H0 : p_manga = p_other
# H1 : p_manga < p_other
p_nula <- 0.5
prop.test(manga, n, p = p_nula, alternative = "less")
# TEST D'HIPOTESIS:
# H0 : v_manga = v_manga
# H1 : v_manga > v_other
val_manga <- anime$PUNTS[anime$FONT == "Manga" & anime$ANY >= 2000]
val_other <- anime$PUNTS[anime$FONT != "Manga" & anime$ANY >= 2000]
t.test(val_manga, val_other, alternative = "greater", var.equal = FALSE)
library(EnvStats)
# Assigneu com a valor a la variable m el vostre NIU:
m <- 1666540
## Dades
set.seed(m)
n <- 120
dades <- round(rnorm(n, mean = 6, sd = 1), 1)
x <- dades
alpha <- 0.01
## a)
# TEST D'HIPOTESIS:
# H0 : mu = 5.9
# H1 : mu != 5.9
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
cat(mean(dades))
alpha <- 0.05
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
alpha <- 0.01
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
p-value = 1- t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
p-value <- 1- t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
x <- dades
## Exercici 2
alpha <- 0.01
library(EnvStats)
sigma2 <- 1.3
varTest(x, sigma.squared = sigma2, alternative = "less", conf.level = 1 - alpha)
alpha <- 0.01
# TEST D'HIPOTESIS:
# H0 : sigma^2 = 1.3
# H1 : sigma^2 < 1.3
x <- dades
library(EnvStats)
sigma2 <- 1.3
varTest(x, sigma.squared = sigma2, alternative = "less", conf.level = 1 - alpha)
# pvalor > alpha ---> Acceptem H0
major7 <- sum(x > 7)
alpha <- 0.01
prop.test(major7, n, p = 0.2, alternative = "greater", correct = FALSE, conf.level = 1 - alpha)
proporcio = major7/n
x <- dades
alpha <- 0.01
## a)
# TEST D'HIPOTESIS:
# H0 : mu = 5.9
# H1 : mu != 5.9
t.test(x, mu = 5.9, alternative = "two.sided", conf.level = 1 - alpha)
# pvalor > alpha ---> Acceptem H10
